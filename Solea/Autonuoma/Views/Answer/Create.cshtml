@model Org.Ktu.Isk.P175B602.Autonuoma.ViewModels.AnswerEditVM
@{
	ViewData["title"] = "Create answer";
	TempData["id"] = Model.user.Id;
	TempData["id1"] = Model.user.Id;
	TempData["name"] = Model.user.Name;
	TempData["currency"] = Model.user.Currency;
}
@if(Model.user.Id==0){
<body onload=' window.location="http://localhost:5000" ; '></body>
}
<div class="main-content-header container-fluid d-flex d-row justify-content-between align-items-center">
	<pantrast class="title">@ViewData["title"]</pantrast>
</div>

<div class="container-fluid d-flex justify-content-center">
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	@Html.HiddenFor(m => m.Answer.Id)

	@Html.HiddenFor(m => m.user.Id)
	@Html.HiddenFor(m => m.Answer.fk_User, new { htmlAttributes = new { @Value=Model.Answer.fk_User } })

	<fieldset class="border rounded shadow p-2">
		@*<div class="form-group">
			@Html.LabelFor(m => m.Answer.fk_User, new { @class = "control-label" })
			@Html.DropDownListFor(m => m.Answer.fk_User, Model.Lists.Users, "--------------", new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Answer.fk_User, "", new { @class = "text-danger" })
		</div>*@

		<div class="form-group">
			@Html.LabelFor(m => m.Answer.fk_Questions, new { @class = "control-label" })
			@Html.EditorFor(m => m.Answer.fk_Questions, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"  } })
			@Html.ValidationMessageFor(m => m.Answer.fk_Questions, "", new { @class = "text-danger" })
		</div>

        <div class="form-group">
			@Html.LabelFor(m => m.Answer.Answers, new { @class = "control-label" })
			@Html.EditorFor(m => m.Answer.Answers, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessage("answer"@*m => m.Answer.Answers, "", new { @class = "text-danger" }*@)
		</div>

		@*<div class="form-group">
			@Html.LabelFor(m => m.Answer.Likes, new { @class = "control-label" })
			@Html.EditorFor(m => m.Answer.Likes, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(m => m.Answer.Likes, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Answer.Dislikes, new { @class = "control-label" })
			@Html.EditorFor(m => m.Answer.Dislikes, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(m => m.Answer.Dislikes, "", new { @class = "text-danger" })
		</div>*@
	</fieldset>

	<div class="container-fluid d-flex d-row justify-content-end">
		
		<button name="save" value="1"> Save</button>
	</div>
}
</div>

<div class="main-content-footer container-fluid d-flex d-row justify-content-between align-items-center">
	<span class="title"></span>
	<span class="actions">
		<a href="@Url.Action("Content", "Question", new { id = Model.Lists.Questions_Id})" class="btn btn-success"><i class="fa-solid fa-angles-left"></i> Back to list</a>
	</span>
</div>
