@model Org.Ktu.Isk.P175B602.Autonuoma.ViewModels.QuestionEditVM
@{
	ViewData["title"] = "Create question";
	TempData["id"] = Model.user.Id;
	TempData["id1"] = Model.user.Id;
	TempData["name"] = Model.user.Name;
	TempData["currency"] = Model.user.Currency;
}
@if(Model.user.Id==0){
<body onload=' window.location="http://localhost:5000" ; '></body>
}
<link rel="stylesheet" href="~/css/bootswatchTheme.css" />
<div class="main-content-header container-fluid d-flex d-row justify-content-between align-items-center">
	<pantrast class="title">@ViewData["title"]</pantrast>
</div>

<div class="container-fluid d-flex justify-content-center">
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<namequestion>@Model.user.Name</namequestion>
	@Html.HiddenFor(m => m.Question.Id)
	@Html.HiddenFor(m => m.user.Id)
	@Html.HiddenFor(m => m.Question.fk_User, new { htmlAttributes = new { @Value=Model.Question.fk_User } })
	<fieldset class="border rounded shadow p-2">
		@*<div class="form-group">
			@Html.LabelFor(m => m.Question.fk_User, new { @class = "control-label" })
			@Html.DropDownListFor(m => m.Question.fk_User, Model.Lists.Users, "--------------", new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.Question.fk_User, "", new { @class = "text-danger" })
		</div>*@
		
		@*<div class="form-group">
			@Html.LabelFor(m => m.Question.fk_User, new { @class = "control-label" })
			@Html.EditorFor(m => m.Question.fk_User, new { htmlAttributes = new { @Value=Model.Question.fk_User, @readonly = "readonly"  } })
			@Html.ValidationMessageFor(m => m.Question.fk_User, "", new { @class = "text-danger" })
		</div>*@

		<div class="form-group">
			<atskls>@Html.LabelFor(m => m.Question.Questions, new { @class = "control-label" }) </atskls>
			@Html.EditorFor(m => m.Question.Questions, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessage("question"@*m => m.Question.Questions, "", new { @class = "text-danger" }*@)
		</div>

		<div class="form-group">
			<atskls>@Html.LabelFor(m => m.Question.Content, new { @class = "control-label" }) </atskls>
			@Html.EditorFor(m => m.Question.Content, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessage("content"@*m => m.Question.Content, "", new { @class = "text-danger" }*@)
		</div>

		@*<div class="form-group">
			@Html.LabelFor(m => m.Question.Likes, new { @class = "control-label" })
			@Html.EditorFor(m => m.Question.Likes, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(m => m.Question.Likes, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Question.Dislikes, new { @class = "control-label" })
			@Html.EditorFor(m => m.Question.Dislikes, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(m => m.Question.Dislikes, "", new { @class = "text-danger" })
		</div>*@
	@*
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="IÅ¡saugoti" class="btn btn-success" />
			</div>
		</div>*@
	</fieldset>
	<p>Creating a question will cost you 1 golden coin</p>
	<div class="container-fluid d-flex d-row justify-content-end">
		<button name="save" value="1" class="btn btn-warning"><i class="fa-solid fa-floppy-disk"></i> Save</button>
	</div>
}
</div>

<div class="main-content-footer container-fluid d-flex d-row justify-content-between align-items-center">
	<span class="title"></span>
	<span class="actions">
		<a href="@Url.Action("Index")" class="btn btn-success"><i class="fa-solid fa-angles-left"></i> Back to list</a>
	</span>
</div>
